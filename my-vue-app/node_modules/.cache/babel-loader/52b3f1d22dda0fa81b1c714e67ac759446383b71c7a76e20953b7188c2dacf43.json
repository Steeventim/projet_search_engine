{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-4\",\n  style: {\n    \"max-width\": \"1200px\",\n    \"margin\": \"0 auto\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"search-bar mb-4\",\n  style: {\n    \"background-color\": \"#f7f7f7\",\n    \"padding\": \"20px\",\n    \"border-radius\": \"10px\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"result-list\"\n};\nconst _hoisted_4 = {\n  class: \"content\"\n};\nconst _hoisted_5 = [\"innerHTML\"];\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Zone de recherche \"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.input = $event),\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.filterData && $options.filterData(...args)),\n    class: \"form-control\",\n    placeholder: \"Search...\",\n    style: {\n      \"height\": \"40px\",\n      \"font-size\": \"16px\",\n      \"padding\": \"10px\",\n      \"border\": \"1px solid #ccc\"\n    }\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.input]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.searchDocuments && $options.searchDocuments(...args)),\n    class: \"btn btn-primary mt-2\",\n    style: {\n      \"height\": \"40px\",\n      \"font-size\": \"16px\",\n      \"padding\": \"10px\",\n      \"border\": \"none\",\n      \"border-radius\": \"10px\",\n      \"background-color\": \"#337ab7\",\n      \"color\": \"#fff\"\n    }\n  }, \" Search \")]), _createCommentVNode(\" Liste des résultats \"), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.paginatedItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id,\n      class: \"result-card\"\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" Titre et contenu \"), _createElementVNode(\"h3\", null, _toDisplayString(item.filename), 1 /* TEXT */), _createElementVNode(\"div\", {\n      innerHTML: $options.getHighlightedSnippet(item.highlight.content),\n      class: \"content-text mb-3\"\n    }, null, 8 /* PROPS */, _hoisted_5), _createCommentVNode(\" Informations supplémentaires \"), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Filesize:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(item.filesize) + \" bytes\", 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"Created Date:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(item.createdDate), 1 /* TEXT */)]), _createCommentVNode(\" Bouton pour visualiser le fichier \"), _createElementVNode(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: $event => _ctx.openPdfInNewPage(item.virtualPath),\n      style: {\n        \"height\": \"40px\",\n        \"font-size\": \"16px\",\n        \"padding\": \"10px\",\n        \"border\": \"none\",\n        \"border-radius\": \"10px\",\n        \"background-color\": \"#337ab7\",\n        \"color\": \"#fff\"\n      }\n    }, \" Voir le fichier \", 8 /* PROPS */, _hoisted_6)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_cache","$event","$data","input","onInput","args","$options","filterData","placeholder","onClick","searchDocuments","_hoisted_3","_Fragment","_renderList","paginatedItems","item","key","id","_hoisted_4","_toDisplayString","filename","innerHTML","getHighlightedSnippet","highlight","content","_hoisted_5","_createTextVNode","filesize","createdDate","_ctx","openPdfInNewPage","virtualPath","_hoisted_6"],"sources":["/home/tims/Api_ES_project/my-vue-app/src/components/testInterface.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\" style=\"max-width: 1200px; margin: 0 auto\">\n    <!-- Zone de recherche -->\n    <div\n      class=\"search-bar mb-4\"\n      style=\"background-color: #f7f7f7; padding: 20px; border-radius: 10px\"\n    >\n      <input\n        v-model=\"input\"\n        @input=\"filterData\"\n        class=\"form-control\"\n        placeholder=\"Search...\"\n        style=\"\n          height: 40px;\n          font-size: 16px;\n          padding: 10px;\n          border: 1px solid #ccc;\n        \"\n      />\n      <button\n        @click=\"searchDocuments\"\n        class=\"btn btn-primary mt-2\"\n        style=\"\n          height: 40px;\n          font-size: 16px;\n          padding: 10px;\n          border: none;\n          border-radius: 10px;\n          background-color: #337ab7;\n          color: #fff;\n        \"\n      >\n        Search\n      </button>\n    </div>\n\n    <!-- Liste des résultats -->\n    <div class=\"result-list\">\n      <div v-for=\"item in paginatedItems\" :key=\"item.id\" class=\"result-card\">\n        <div class=\"content\">\n          <!-- Titre et contenu -->\n          <h3>{{ item.filename }}</h3>\n          <div\n            v-html=\"getHighlightedSnippet(item.highlight.content)\"\n            class=\"content-text mb-3\"\n          ></div>\n\n          <!-- Informations supplémentaires -->\n          <p><strong>Filesize:</strong> {{ item.filesize }} bytes</p>\n          <p><strong>Created Date:</strong> {{ item.createdDate }}</p>\n\n          <!-- Bouton pour visualiser le fichier -->\n          <button\n            class=\"btn btn-primary\"\n            @click=\"openPdfInNewPage(item.virtualPath)\"\n            style=\"\n              height: 40px;\n              font-size: 16px;\n              padding: 10px;\n              border: none;\n              border-radius: 10px;\n              background-color: #337ab7;\n              color: #fff;\n            \"\n          >\n            Voir le fichier\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      input: \"\", // Contient la valeur du champ de recherche\n      items: [], // Liste des documents obtenus après la recherche\n      currentPage: 1, // Page actuelle pour la pagination\n      itemsPerPage: 10, // Nombre d'éléments affichés par page\n      filteredItems: [], // Liste des documents après filtrage basé sur le terme de recherche\n      pdfUrl: \"\", // URL du PDF à afficher\n    };\n  },\n  methods: {\n    async searchDocuments() {\n      try {\n        const response = await fetch(\n          \"http://localhost:3000/api/documents/search\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ query: this.input }),\n          }\n        );\n        const data = await response.json();\n        this.items = this.preprocessData(data);\n        this.filterData(); // Appliquer le filtre après la recherche\n      } catch (error) {\n        console.error(\"Erreur lors de la recherche:\", error);\n      }\n    },\n    preprocessData(data) {\n      return data.map((item) => ({\n        id: item._id,\n        content: item._source.content,\n        filename: item._source.file.filename,\n        filesize: item._source.file.filesize,\n        createdDate: new Date(item._source.file.created).toLocaleDateString(),\n        virtualPath: item._source.path.virtual,\n        highlight: item.highlight || { content: [] }, // Assurez-vous d'inclure les highlights\n      }));\n    },\n    filterData() {\n      this.currentPage = 1;\n      if (this.input.trim() === \"\") {\n        this.filteredItems = this.items;\n      } else {\n        this.filteredItems = this.items.filter(\n          (item) =>\n            item.content.toLowerCase().includes(this.input.toLowerCase()) ||\n            item.filename.toLowerCase().includes(this.input.toLowerCase())\n        );\n      }\n    },\n    getHighlightedSnippet(text) {\n      // Vérifie si le texte est un tableau et le transforme en chaîne\n      if (Array.isArray(text)) {\n        text = text.join(\" \");\n      }\n\n      // Vérifie si le texte est une chaîne de caractères\n      if (typeof text !== \"string\") {\n        return text;\n      }\n\n      // Si une requête de recherche est présente, applique la surbrillance\n      if (this.input.trim()) {\n        const query = this.input.toLowerCase();\n        const regex = new RegExp(`(${query})`, \"gi\");\n        return text.replace(regex, \"<mark>$1</mark>\");\n      }\n\n      // Retourne le texte sans modification si pas de recherche\n      return text;\n    },\n    openPdfViewer(virtualPath) {\n      if (virtualPath) {\n        this.pdfUrl = `http://localhost:3000/api/documents/files/${encodeURIComponent(\n          virtualPath\n        )}`;\n      } else {\n        console.error(\"Le chemin virtuel n'est pas défini\");\n      }\n    },\n    closePdfViewer() {\n      this.pdfUrl = \"\";\n    },\n  },\n  computed: {\n    paginatedItems() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredItems.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredItems.length / this.itemsPerPage);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.search-bar {\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.result-list {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.result-card {\n  background-color: white;\n  padding: 20px;\n  border: 1px solid #ddd;\n  border-radius: 10px;\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);\n}\n\n.content {\n  text-align: left;\n}\n\n.content-text {\n  white-space: pre-wrap;\n  font-size: 14px;\n  color: #666;\n}\n\n.pdf-container {\n  position: relative;\n  margin-top: 20px;\n  border: 1px solid #ddd;\n  border-radius: 10px;\n}\n\n.pdf-container .btn-close {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background: none;\n  border: none;\n  font-size: 20px;\n  color: #000;\n  cursor: pointer;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC,gBAAgB;EAACC,KAAyC,EAAzC;IAAA;IAAA;EAAA;;;EAGxBD,KAAK,EAAC,iBAAiB;EACvBC,KAAqE,EAArE;IAAA;IAAA;IAAA;EAAA;;;EAgCGD,KAAK,EAAC;AAAa;;EAEfA,KAAK,EAAC;AAAS;mBAvC5B;mBAAA;;uBACEE,mBAAA,CAqEM,OArENC,UAqEM,GApEJC,mBAAA,uBAA0B,EAC1BC,mBAAA,CA+BM,OA/BNC,UA+BM,G,gBA3BJD,mBAAA,CAWE;IAlBR,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQiBC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IACbG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAClBZ,KAAK,EAAC,cAAc;IACpBe,WAAW,EAAC,WAAW;IACvBd,KAKC,EALD;MAAA;MAAA;MAAA;MAAA;IAAA;iEAJSQ,KAAA,CAAAC,KAAK,E,GAWhBL,mBAAA,CAcS;IAbNW,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAI,eAAA,IAAAJ,QAAA,CAAAI,eAAA,IAAAL,IAAA,CAAe;IACvBZ,KAAK,EAAC,sBAAsB;IAC5BC,KAQC,EARD;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;KASD,UAED,E,GAGFG,mBAAA,yBAA4B,EAC5BC,mBAAA,CAgCM,OAhCNa,UAgCM,I,kBA/BJhB,mBAAA,CA8BMiB,SAAA,QApEZC,WAAA,CAsC0BP,QAAA,CAAAQ,cAAc,EAAtBC,IAAI;yBAAhBpB,mBAAA,CA8BM;MA9B+BqB,GAAG,EAAED,IAAI,CAACE,EAAE;MAAExB,KAAK,EAAC;QACvDK,mBAAA,CA4BM,OA5BNoB,UA4BM,GA3BJrB,mBAAA,sBAAyB,EACzBC,mBAAA,CAA4B,YAAAqB,gBAAA,CAArBJ,IAAI,CAACK,QAAQ,kBACpBtB,mBAAA,CAGO;MAFLuB,SAAsD,EAA9Cf,QAAA,CAAAgB,qBAAqB,CAACP,IAAI,CAACQ,SAAS,CAACC,OAAO;MACpD/B,KAAK,EAAC;4BA5ClBgC,UAAA,GA+CU5B,mBAAA,kCAAqC,EACrCC,mBAAA,CAA2D,Y,0BAAxDA,mBAAA,CAA0B,gBAAlB,WAAS,sBAhD9B4B,gBAAA,CAgDuC,GAAC,GAAAP,gBAAA,CAAGJ,IAAI,CAACY,QAAQ,IAAG,QAAM,gB,GACvD7B,mBAAA,CAA4D,Y,0BAAzDA,mBAAA,CAA8B,gBAAtB,eAAa,sBAjDlC4B,gBAAA,CAiD2C,GAAC,GAAAP,gBAAA,CAAGJ,IAAI,CAACa,WAAW,iB,GAErD/B,mBAAA,uCAA0C,EAC1CC,mBAAA,CAcS;MAbPL,KAAK,EAAC,iBAAiB;MACtBgB,OAAK,EAAAR,MAAA,IAAE4B,IAAA,CAAAC,gBAAgB,CAACf,IAAI,CAACgB,WAAW;MACzCrC,KAQC,EARD;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;MAAA;OASD,mBAED,iBAlEVsC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}