{"ast":null,"code":"export default {\n  data() {\n    return {\n      input: \"\",\n      // Contient la valeur du champ de recherche\n      items: [],\n      // Liste des documents obtenus après la recherche\n      currentPage: 1,\n      // Page actuelle pour la pagination\n      itemsPerPage: 10,\n      // Nombre d'éléments affichés par page\n      filteredItems: [] // Liste des documents après filtrage basé sur le terme de recherche\n    };\n  },\n  methods: {\n    async searchDocuments() {\n      try {\n        const response = await fetch(\"http://localhost:3000/api/documents/search\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            query: this.input\n          })\n        });\n        const data = await response.json();\n        this.items = this.preprocessData(data);\n        this.filterData(); // Appliquer le filtre après la recherche\n      } catch (error) {\n        console.error(\"Erreur lors de la recherche:\", error);\n      }\n    },\n    preprocessData(data) {\n      return data.map(item => ({\n        id: item._id,\n        content: item._source.content,\n        filename: item._source.file.filename,\n        filesize: item._source.file.filesize,\n        createdDate: new Date(item._source.file.created).toLocaleDateString(),\n        virtualPath: item._source.path.virtual,\n        highlight: item.highlight || {\n          content: []\n        } // Assurez-vous d'inclure les highlights\n      }));\n    },\n    filterData() {\n      this.currentPage = 1;\n      if (this.input.trim() === \"\") {\n        this.filteredItems = this.items;\n      } else {\n        this.filteredItems = this.items.filter(item => item.content.toLowerCase().includes(this.input.toLowerCase()) || item.filename.toLowerCase().includes(this.input.toLowerCase()));\n      }\n    },\n    getHighlightedSnippet(text) {\n      // Vérifie si le texte est un tableau et le transforme en chaîne\n      if (Array.isArray(text)) {\n        text = text.join(\" \");\n      }\n\n      // Vérifie si le texte est une chaîne de caractères\n      if (typeof text !== \"string\") {\n        return text;\n      }\n\n      // Si une requête de recherche est présente, applique la surbrillance\n      if (this.input.trim()) {\n        const query = this.input.toLowerCase();\n        const regex = new RegExp(`(${query})`, \"gi\");\n        return text.replace(regex, \"<mark>$1</mark>\");\n      }\n\n      // Retourne le texte sans modification si pas de recherche\n      return text;\n    },\n    openPdfViewer(virtualPath) {\n      if (virtualPath) {\n        const searchTerm = this.input; // Récupérer le terme de recherche entré par l'utilisateur\n        // Créez l'URL du PDF avec le terme de recherche\n        const pdfUrl = `http://localhost:3000/api/documents/files/fixedPages/${encodeURIComponent(virtualPath)}?searchTerm=${encodeURIComponent(searchTerm)}`;\n\n        // Ouvre une nouvelle page avec l'URL du PDF dans un visualiseur\n        window.open(pdfUrl, \"_blank\");\n      } else {\n        console.error(\"Le chemin virtuel n'est pas défini\");\n      }\n    }\n  },\n  computed: {\n    paginatedItems() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredItems.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredItems.length / this.itemsPerPage);\n    }\n  }\n};","map":{"version":3,"names":["data","input","items","currentPage","itemsPerPage","filteredItems","methods","searchDocuments","response","fetch","method","headers","body","JSON","stringify","query","json","preprocessData","filterData","error","console","map","item","id","_id","content","_source","filename","file","filesize","createdDate","Date","created","toLocaleDateString","virtualPath","path","virtual","highlight","trim","filter","toLowerCase","includes","getHighlightedSnippet","text","Array","isArray","join","regex","RegExp","replace","openPdfViewer","searchTerm","pdfUrl","encodeURIComponent","window","open","computed","paginatedItems","start","end","slice","totalPages","Math","ceil","length"],"sources":["/home/tims/Api_ES_project/my-vue-app/src/components/testInterface.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\" style=\"max-width: 1200px; margin: 0 auto\">\n    <!-- Zone de recherche -->\n    <div\n      class=\"search-bar mb-4\"\n      style=\"background-color: #f7f7f7; padding: 20px; border-radius: 10px\"\n    >\n      <input\n        v-model=\"input\"\n        @input=\"filterData\"\n        class=\"form-control\"\n        placeholder=\"Search...\"\n        style=\"\n          height: 40px;\n          font-size: 16px;\n          padding: 10px;\n          border: 1px solid #ccc;\n        \"\n      />\n      <button\n        @click=\"searchDocuments\"\n        class=\"btn btn-primary mt-2\"\n        style=\"\n          height: 40px;\n          font-size: 16px;\n          padding: 10px;\n          border: none;\n          border-radius: 10px;\n          background-color: #337ab7;\n          color: #fff;\n        \"\n      >\n        Search\n      </button>\n    </div>\n\n    <!-- Liste des résultats -->\n    <div class=\"result-list\">\n      <div v-for=\"item in paginatedItems\" :key=\"item.id\" class=\"result-card\">\n        <div class=\"content\">\n          <!-- Titre et contenu -->\n          <h3>{{ item.filename }}</h3>\n          <div\n            v-html=\"getHighlightedSnippet(item.highlight.content)\"\n            class=\"content-text mb-3\"\n          ></div>\n\n          <!-- Informations supplémentaires -->\n          <p><strong>Filesize:</strong> {{ item.filesize }} bytes</p>\n          <p><strong>Created Date:</strong> {{ item.createdDate }}</p>\n\n          <!-- Bouton pour visualiser le fichier -->\n          <button\n            class=\"btn btn-primary\"\n            @click=\"openPdfInNewPage(item.virtualPath)\"\n            style=\"\n              height: 40px;\n              font-size: 16px;\n              padding: 10px;\n              border: none;\n              border-radius: 10px;\n              background-color: #337ab7;\n              color: #fff;\n            \"\n          >\n            Voir le fichier\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      input: \"\", // Contient la valeur du champ de recherche\n      items: [], // Liste des documents obtenus après la recherche\n      currentPage: 1, // Page actuelle pour la pagination\n      itemsPerPage: 10, // Nombre d'éléments affichés par page\n      filteredItems: [], // Liste des documents après filtrage basé sur le terme de recherche\n    };\n  },\n  methods: {\n    async searchDocuments() {\n      try {\n        const response = await fetch(\n          \"http://localhost:3000/api/documents/search\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ query: this.input }),\n          }\n        );\n        const data = await response.json();\n        this.items = this.preprocessData(data);\n        this.filterData(); // Appliquer le filtre après la recherche\n      } catch (error) {\n        console.error(\"Erreur lors de la recherche:\", error);\n      }\n    },\n    preprocessData(data) {\n      return data.map((item) => ({\n        id: item._id,\n        content: item._source.content,\n        filename: item._source.file.filename,\n        filesize: item._source.file.filesize,\n        createdDate: new Date(item._source.file.created).toLocaleDateString(),\n        virtualPath: item._source.path.virtual,\n        highlight: item.highlight || { content: [] }, // Assurez-vous d'inclure les highlights\n      }));\n    },\n    filterData() {\n      this.currentPage = 1;\n      if (this.input.trim() === \"\") {\n        this.filteredItems = this.items;\n      } else {\n        this.filteredItems = this.items.filter(\n          (item) =>\n            item.content.toLowerCase().includes(this.input.toLowerCase()) ||\n            item.filename.toLowerCase().includes(this.input.toLowerCase())\n        );\n      }\n    },\n    getHighlightedSnippet(text) {\n      // Vérifie si le texte est un tableau et le transforme en chaîne\n      if (Array.isArray(text)) {\n        text = text.join(\" \");\n      }\n\n      // Vérifie si le texte est une chaîne de caractères\n      if (typeof text !== \"string\") {\n        return text;\n      }\n\n      // Si une requête de recherche est présente, applique la surbrillance\n      if (this.input.trim()) {\n        const query = this.input.toLowerCase();\n        const regex = new RegExp(`(${query})`, \"gi\");\n        return text.replace(regex, \"<mark>$1</mark>\");\n      }\n\n      // Retourne le texte sans modification si pas de recherche\n      return text;\n    },\n    openPdfViewer(virtualPath) {\n      if (virtualPath) {\n        const searchTerm = this.input; // Récupérer le terme de recherche entré par l'utilisateur\n        // Créez l'URL du PDF avec le terme de recherche\n        const pdfUrl = `http://localhost:3000/api/documents/files/fixedPages/${encodeURIComponent(\n          virtualPath\n        )}?searchTerm=${encodeURIComponent(searchTerm)}`;\n\n        // Ouvre une nouvelle page avec l'URL du PDF dans un visualiseur\n        window.open(pdfUrl, \"_blank\");\n      } else {\n        console.error(\"Le chemin virtuel n'est pas défini\");\n      }\n    },\n  },\n  computed: {\n    paginatedItems() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredItems.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredItems.length / this.itemsPerPage);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.search-bar {\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.result-list {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.result-card {\n  background-color: white;\n  padding: 20px;\n  border: 1px solid #ddd;\n  border-radius: 10px;\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);\n}\n\n.content {\n  text-align: left;\n}\n\n.content-text {\n  white-space: pre-wrap;\n  font-size: 14px;\n  color: #666;\n}\n\n.pdf-container {\n  position: relative;\n  margin-top: 20px;\n  border: 1px solid #ddd;\n  border-radius: 10px;\n}\n\n.pdf-container .btn-close {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background: none;\n  border: none;\n  font-size: 20px;\n  color: #000;\n  cursor: pointer;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}