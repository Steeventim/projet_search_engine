{"ast":null,"code":"export default {\n  data() {\n    return {\n      input: '',\n      // Contient la valeur du champ de recherche\n      items: [],\n      // Liste des documents obtenus après la recherche\n      currentPage: 1,\n      // Page actuelle pour la pagination\n      itemsPerPage: 10,\n      // Nombre d'éléments affichés par page\n      filteredItems: [],\n      // Liste des documents après filtrage basé sur le terme de recherche\n      pdfUrl: '' // URL du PDF à afficher (utilisé pour l'iframe ou le lecteur PDF)\n    };\n  },\n  methods: {\n    async searchDocuments() {\n      try {\n        const response = await fetch('http://localhost:3000/api/documents/search', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            query: this.input\n          })\n        });\n        const data = await response.json();\n        this.items = this.preprocessData(data);\n        this.filterData(); // Appliquer le filtre après la recherche\n      } catch (error) {\n        console.error('Erreur lors de la recherche:', error);\n      }\n    },\n    preprocessData(data) {\n      return data.map(item => ({\n        id: item._id,\n        content: item._source.content,\n        filename: item._source.file.filename,\n        filesize: item._source.file.filesize,\n        createdDate: new Date(item._source.file.created).toLocaleDateString(),\n        virtualPath: item._source.path.virtual,\n        highlight: item.highlight || {\n          content: []\n        } // Assurez-vous d'inclure les highlights\n      }));\n    },\n    filterData() {\n      this.currentPage = 1;\n      if (this.input.trim() === \"\") {\n        this.filteredItems = this.items;\n      } else {\n        this.filteredItems = this.items.filter(item => item.content.toLowerCase().includes(this.input.toLowerCase()) || item.filename.toLowerCase().includes(this.input.toLowerCase()));\n      }\n    },\n    getHighlightedSnippet(highlights) {\n      if (!highlights || highlights.length === 0) return 'No highlights found.';\n      return highlights.join(' '); // Combine les highlights si nécessaire\n    },\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n    openPdfViewer(virtualPath) {\n      if (virtualPath) {\n        const searchTerm = this.input; // Récupérer le terme de recherche entré par l'utilisateur\n        const pdfUrl = `http://localhost:3000/api/documents/files/fixedPages/${encodeURIComponent(virtualPath)}?searchTerm=${encodeURIComponent(searchTerm)}`;\n        const viewerUrl = `/pdfViewer.html?url=${encodeURIComponent(pdfUrl)}`;\n        window.open(viewerUrl, '_blank');\n      } else {\n        console.error('Le chemin virtuel n\\'est pas défini');\n      }\n    }\n  },\n  computed: {\n    paginatedItems() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredItems.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredItems.length / this.itemsPerPage);\n    }\n  }\n};","map":{"version":3,"names":["data","input","items","currentPage","itemsPerPage","filteredItems","pdfUrl","methods","searchDocuments","response","fetch","method","headers","body","JSON","stringify","query","json","preprocessData","filterData","error","console","map","item","id","_id","content","_source","filename","file","filesize","createdDate","Date","created","toLocaleDateString","virtualPath","path","virtual","highlight","trim","filter","toLowerCase","includes","getHighlightedSnippet","highlights","length","join","changePage","page","totalPages","openPdfViewer","searchTerm","encodeURIComponent","viewerUrl","window","open","computed","paginatedItems","start","end","slice","Math","ceil"],"sources":["/home/tims/Api_ES_project/my-vue-app/src/components/testInterface.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\" style=\"max-width: 1200px; margin: 0 auto;\">\n    <!-- Zone de recherche -->\n    <div class=\"search-bar mb-4\" style=\"background-color: #f7f7f7; padding: 20px; border-radius: 10px;\">\n      <input v-model=\"input\" @input=\"filterData\" class=\"form-control\" placeholder=\"Search...\" style=\"height: 40px; font-size: 16px; padding: 10px; border: 1px solid #ccc;\" />\n      <button @click=\"searchDocuments\" class=\"btn btn-primary mt-2\" style=\"height: 40px; font-size: 16px; padding: 10px; border: none; border-radius: 10px; background-color: #337ab7; color: #fff;\">Search</button>\n    </div>\n\n    <!-- Liste des résultats -->\n    <div class=\"row\">\n      <div v-for=\"item in paginatedItems\" :key=\"item.id\" class=\"col-md-4 mb-4\">\n        <div class=\"card\" style=\"box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\">\n          <div class=\"card-body\">\n            <!-- Contenu avec surbrillance -->\n            <div v-html=\"getHighlightedSnippet(item.highlight.content)\" class=\"content-text mb-3\" style=\"font-size: 14px; color: #666;\"></div>\n\n            <!-- Informations supplémentaires sur le document -->\n            <p><strong>Filename:</strong> {{ item.filename }}</p>\n            <p><strong>Filesize:</strong> {{ item.filesize }} bytes</p>\n            <p><strong>Created Date:</strong> {{ item.createdDate }}</p>\n            <p><strong>Virtual Path:</strong> {{ item.virtualPath }}</p>\n\n            <!-- Bouton pour visualiser le fichier -->\n            <button class=\"btn btn-primary\" @click=\"openPdfViewer(item.virtualPath)\" style=\"height: 40px; font-size: 16px; padding: 10px; border: none; border-radius: 10px; background-color: #337ab7; color: #fff;\">Voir le fichier</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Iframe pour afficher le PDF -->\n    <div v-if=\"pdfUrl\" class=\"pdf-container\" style=\"background-color: #f7f7f7; padding: 20px; border-radius: 10px;\">\n      <iframe :src=\"pdfUrl\" width=\"100%\" height=\"600px\" style=\"border: none;\"></iframe>\n      <button class=\"btn btn-secondary btn-close\" @click=\"closePdfViewer\" style=\"height: 40px; font-size: 16px; padding: 10px; border: none; border-radius: 10px; background-color: #ccc; color: #666;\">Close</button>\n    </div>\n\n    <!-- Pagination -->\n    <!-- <nav aria-label=\"Page navigation\">\n      <ul class=\"pagination\">\n          <button class=\"page-link\" @click=\"changePage(currentPage - 1)\" :disabled=\"currentPage <= 1\" style=\"height: 40px; font-size: 16px; padding: 10px; border: none; border-radius: 10px; background-color: #337ab7; color: #fff;\">Previous</button>\n          <span class=\"page-link\" style=\"font-size: 16px; color: #666;\">{{ currentPage }} / {{ totalPages }}</span>\n          <button class=\"page-link\" @click=\"changePage(currentPage + 1)\" :disabled=\"currentPage >= totalPages\" style=\"height: 40px; font-size: 16px; padding: 10px; border: none; border-radius: 10px; background-color: #337ab7; color: #fff;\">Next</button>\n      </ul>\n    </nav> -->\n  </div>\n</template>\n\n\n<script>\nexport default {\n  data() {\n  return {\n    input: '',  // Contient la valeur du champ de recherche\n    items: [],  // Liste des documents obtenus après la recherche\n    currentPage: 1,  // Page actuelle pour la pagination\n    itemsPerPage: 10,  // Nombre d'éléments affichés par page\n    filteredItems: [],  // Liste des documents après filtrage basé sur le terme de recherche\n    pdfUrl: ''  // URL du PDF à afficher (utilisé pour l'iframe ou le lecteur PDF)\n  };\n},\n  methods: {\n    async searchDocuments() {\n  try {\n    const response = await fetch('http://localhost:3000/api/documents/search', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ query: this.input })\n    });\n    const data = await response.json();\n    this.items = this.preprocessData(data);\n    this.filterData(); // Appliquer le filtre après la recherche\n  } catch (error) {\n    console.error('Erreur lors de la recherche:', error);\n  }\n}\n,\n    preprocessData(data) {\n      return data.map(item => ({\n        id: item._id,\n        content: item._source.content,\n        filename: item._source.file.filename,\n        filesize: item._source.file.filesize,\n        createdDate: new Date(item._source.file.created).toLocaleDateString(),\n        virtualPath: item._source.path.virtual,\n        highlight: item.highlight || { content: [] } // Assurez-vous d'inclure les highlights\n      }));\n    },\n    filterData() {\n      this.currentPage = 1;\n      if (this.input.trim() === \"\") {\n        this.filteredItems = this.items;\n      } else {\n        this.filteredItems = this.items.filter(item =>\n          item.content.toLowerCase().includes(this.input.toLowerCase()) ||\n          item.filename.toLowerCase().includes(this.input.toLowerCase())\n        );\n      }\n    },\n    getHighlightedSnippet(highlights) {\n      if (!highlights || highlights.length === 0) return 'No highlights found.';\n      return highlights.join(' '); // Combine les highlights si nécessaire\n    },\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n    openPdfViewer(virtualPath) {\n    if (virtualPath) {\n      const searchTerm = this.input;  // Récupérer le terme de recherche entré par l'utilisateur\n      const pdfUrl = `http://localhost:3000/api/documents/files/fixedPages/${encodeURIComponent(virtualPath)}?searchTerm=${encodeURIComponent(searchTerm)}`;\n      const viewerUrl = `/pdfViewer.html?url=${encodeURIComponent(pdfUrl)}`;\n      window.open(viewerUrl, '_blank');\n    } else {\n      console.error('Le chemin virtuel n\\'est pas défini');\n    }\n  }\n},\n  computed: {\n    paginatedItems() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredItems.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredItems.length / this.itemsPerPage);\n    }\n  }\n};\n</script>\n\n\n\n<style scoped>\n.pdf-container {\n  position: relative;\n  margin-top: 20px;\n  border: 1px solid #ddd;\n  border-radius: 0.25rem;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.pdf-container .btn-close {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background: none;\n  border: none;\n  font-size: 20px;\n  color: #000;\n  cursor: pointer;\n}\n\n.content-text mark {\n  background-color: #ffeb3b; /* Couleur de fond jaune */\n  color: #000; /* Couleur du texte noir */\n  padding: 0.1em; /* Espacement autour du texte */\n  border-radius: 0.2em; /* Coins arrondis */\n}\n\n.search-bar {\n  max-width: 600px;\n  margin: 0 auto;\n  border: 5px;\n}\n\n.card {\n  border: 1px solid #ddd;\n  border-radius: 0.25rem;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.content-text {\n  white-space: pre-wrap; /* Pour afficher les retours à la ligne du texte */\n}\n\n.pagination {\n  justify-content: center;\n}\n</style>\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}